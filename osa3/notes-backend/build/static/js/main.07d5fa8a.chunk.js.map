{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","react_default","a","createElement","content","id","onClick","important","services_notes","axios","get","then","response","data","newObject","post","put","concat","App","props","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","useEffect","noteService","resNotes","catch","error","alert","Fragment","filter","map","components_Note","key","oldNote","find","n","objectSpread","resNote","onSubmit","event","preventDefault","newNoteObj","date","Date","value","onChange","target","type","ReactDOM","render","src_App","document","getElementById"],"mappings":"uLAIeA,EAFF,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,iBAAT,OAAgCC,EAAAC,EAAAC,cAAA,UAAKJ,EAAKK,QAAV,IAAoBL,EAAKM,GAAzB,IAA6BJ,EAAAC,EAAAC,cAAA,UAAQG,QAASN,GAAjB,QAA0CD,EAAKQ,UAAY,cAAgB,+BCiBtIC,EAfA,WAEb,OADYC,IAAMC,IAHJ,cAIHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAaxBL,EAVA,SAAAM,GAEb,OADYL,IAAMM,KARJ,aAQkBD,GACrBH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAQxBL,EALA,SAACH,EAAIS,GAElB,OADYL,IAAMO,IAAN,GAAAC,OAbE,aAaF,KAAAA,OAAwBZ,GAAMS,GAC/BH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QCmExBK,EA9EH,SAACC,GAAU,IAAAC,EACKC,mBAAS,IADdC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACdK,EADcH,EAAA,GACPI,EADOJ,EAAA,GAAAK,EAESN,mBAAS,qBAFlBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEdE,EAFcD,EAAA,GAELE,EAFKF,EAAA,GAAAG,EAGSV,oBAAS,GAHlBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGdE,EAHcD,EAAA,GAGLE,EAHKF,EAAA,GAKrBG,oBAAU,WACRC,IAEGzB,KAAK,SAAA0B,GACJX,EAASW,KAEVC,MAAM,SAAAC,GAAK,OAAIC,MAAM,6CACvB,IA8CH,OACEvC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuC,SAAA,KACExC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,WAbgB8B,EAAUR,EAAQA,EAAMiB,OAAO,SAAA3C,GAAI,OAAIA,EAAKQ,aAC5CoC,IAAI,SAAA5C,GAAI,OAC1BE,EAAAC,EAAAC,cAACyC,EAAD,CACEC,IAAK9C,EAAKM,GACVN,KAAMA,EACNC,iBAAkB,kBAnBC,SAAAK,GACvB,IAAMyC,EAAUrB,EAAMsB,KAAK,SAAAC,GAAC,OAAIA,EAAE3C,KAAOA,IACnCwB,EAAON,OAAA0B,EAAA,EAAA1B,CAAA,GAAOuB,EAAP,CAAgBvC,WAAYuC,EAAQvC,YAEjD6B,EACU/B,EAAIwB,GACXlB,KAAK,SAAAuC,GACJxB,EAASD,EAAMkB,IAAI,SAAAK,GAAC,OAAIA,EAAE3C,KAAOA,EAAK2C,EAAIE,OAE3CZ,MAAM,SAAAC,GAAK,OAAIC,MAAM,iCAUIxC,CAAiBD,EAAKM,WAYhDJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMgD,SAnDI,SAACC,GACfA,EAAMC,iBAEN,IAAMC,EAAa,CACjBlD,QAASyB,EACT0B,KAAM,IAAIC,KACVjD,WAAW,GAGb6B,EACUkB,GACP3C,KAAK,SAAAuC,GACJxB,EAASD,EAAMR,OAAOiC,MAEvBZ,MAAM,SAAAC,GAAK,OAAIC,MAAM,iCAExBV,EAAW,uBAoCL7B,EAAAC,EAAAC,cAAA,SAAOsD,MAAO5B,EAAS6B,SAtDT,SAACN,GAAD,OAAWtB,EAAWsB,EAAMO,OAAOF,UAuDjDxD,EAAAC,EAAAC,cAAA,UAAQyD,KAAK,UAAb,UAGJ3D,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAM4B,GAAYD,KAAnC,QAAmDA,EAAU,iBAAmB,SCzEtF4B,IAASC,OACP7D,EAAAC,EAAAC,cAAC4D,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.07d5fa8a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => <li>{note.content},{note.id} <button onClick={toggleImportance} >Make {note.important ? \"unimportant\" : \"important\"}</button></li>\n\nexport default Note","import axios from 'axios'\n\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const req = axios.get(baseUrl)\n  return req.then(response => response.data)\n}\n\nconst create = newObject => {\n  const req = axios.post(baseUrl, newObject)\n  return req.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const req = axios.put(`${baseUrl}/${id}`, newObject)\n  return req.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState(\"Add a new note...\")\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(resNotes => {\n        setNotes(resNotes)\n      })\n      .catch(error => alert(\"Error: couldn't load notes from server\"))\n  }, [])\n\n  const newNoteChange = (event) => setNewNote(event.target.value)\n\n  const addNote = (event) => {\n    event.preventDefault()\n\n    const newNoteObj = {\n      content: newNote,\n      date: new Date,\n      important: false\n    }\n\n    noteService\n      .create(newNoteObj)\n      .then(resNote => {\n        setNotes(notes.concat(resNote))\n      })\n      .catch(error => alert(\"Error: couldn't create note\"))\n\n    setNewNote(\"Add a new note...\")\n  }\n\n  const toggleImportance = id => {\n    const oldNote = notes.find(n => n.id === id)\n    const newNote = {...oldNote, important: !oldNote.important}\n\n    noteService\n      .update(id, newNote)\n      .then(resNote =>Â {\n        setNotes(notes.map(n => n.id !== id ? n : resNote))\n      })\n      .catch(error => alert(\"Error: couldn't update note\"))\n  }\n\n\n  const rows = () => {\n    const itemsToShow = showAll ? notes : notes.filter(note => note.important)\n    return (itemsToShow.map(note =>\n      <Note\n        key={note.id}\n        note={note}\n        toggleImportance={() => toggleImportance(note.id)}\n      />))\n  }\n\n  return (\n    <>\n      <div>\n        <h1>Notes</h1>\n        <ul>\n          {rows()}\n        </ul>\n      </div>\n      <div>\n        <form onSubmit={addNote}>\n          <input value={newNote} onChange={newNoteChange} />\n          <button type=\"submit\">save</button>\n        </form>\n      </div>\n      <button onClick={() => setShowAll(!showAll)}>Show {showAll ? \"important only\" : \"all\"}</button>\n    </>\n  )\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}